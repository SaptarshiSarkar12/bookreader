{"version":3,"file":"plugins/plugin.search.js","mappings":"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","sources":["webpack://@internetarchive/bookreader/./src/plugins/search/plugin.search.js","webpack://@internetarchive/bookreader/./src/plugins/search/view.js","webpack://@internetarchive/bookreader/./node_modules/core-js/internals/number-parse-float.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.object.entries.js","webpack://@internetarchive/bookreader/./node_modules/core-js/modules/es.parse-float.js"],"sourcesContent":["// @ts-check\n/* global BookReader */\n/**\n * Plugin for Archive.org book search\n * NOTE: This script must be loaded AFTER `plugin.mobile_nav.js`\n * as it mutates mobile nav drawer\n *\n * Events fired at various points throughout search processing are published\n * on the document DOM element. These can be subscribed to using jQuery's event\n * binding method `$.fn.on`. All of the events are prefixed with a BookReader\n * namespace. The events are:\n *\n * @event BookReader:SearchStarted - When a search form is submitted, immediately\n *   before an AJAX call is made to request search results\n * @event BookReader:SearchCallback - When the search AJAX call is returned and at\n *   least one result is returned. The event callback receives an object\n *   with the `results`, plugin `options`, and the BookReader `instance`\n * @event BookReader:SearchCallbackError - When the AJAX request returns an error.\n *   Receives the `results` and `instance`\n * @event BookReader:SearchCallbackNotIndexed - When a message is received that\n *   the book has not had OCR text indexed yet. Receives `instance`\n * @event BookReader:SearchCallbackEmpty - When no results found. Receives\n *   `instance`\n * @event BookReader:SearchCanceled - When no results found. Receives\n *   `instance`\n */\nimport { poll } from '../../BookReader/utils.js';\nimport { renderBoxesInPageContainerLayer } from '../../BookReader/PageContainer.js';\nimport SearchView from './view.js';\n/** @typedef {import('../../BookReader/PageContainer').PageContainer} PageContainer */\n/** @typedef {import('../../BookReader/BookModel').PageIndex} PageIndex */\n/** @typedef {import('../../BookReader/BookModel').LeafNum} LeafNum */\n/** @typedef {import('../../BookReader/BookModel').PageNumString} PageNumString */\n\njQuery.extend(BookReader.defaultOptions, {\n  server: 'ia600609.us.archive.org',\n  bookId: '',\n  subPrefix: '',\n  bookPath: '',\n  enableSearch: true,\n  searchInsideUrl: '/fulltext/inside.php',\n  initialSearchTerm: null,\n});\n\n/** @override */\nBookReader.prototype.setup = (function (super_) {\n  return function (options) {\n    super_.call(this, options);\n\n    this.searchTerm = '';\n    this.searchResults = null;\n    this.searchInsideUrl = options.searchInsideUrl;\n    this.enableSearch = options.enableSearch;\n\n    // Base server used by some api calls\n    this.bookId = options.bookId;\n    this.server = options.server;\n    this.subPrefix = options.subPrefix;\n    this.bookPath = options.bookPath;\n\n    this.searchXHR = null;\n    this._cancelSearch.bind(this);\n    this.cancelSearchRequest.bind(this);\n\n    /** @type { {[pageIndex: number]: SearchInsideMatchBox[]} } */\n    this._searchBoxesByIndex = {};\n\n    this.searchView = undefined;\n  };\n})(BookReader.prototype.setup);\n\n/** @override */\nBookReader.prototype.init = (function (super_) {\n  return function () {\n    super_.call(this);\n    // give SearchView the most complete bookreader state\n    this.searchView = new SearchView({\n      br: this,\n      searchCancelledCallback: () => {\n        this._cancelSearch();\n        this.trigger('SearchCanceled', { term: this.searchTerm, instance: this });\n      }\n    });\n    if (this.options.enableSearch && this.options.initialSearchTerm) {\n      /**\n       * this.search() take two parameter\n       * 1. this.options.initialSearchTerm - search term\n       * 2. {\n       *  goToFirstResult: this.options.goToFirstResult,\n       *  suppressFragmentChange: false // always want to change fragment in URL\n       * }\n       */\n      this.search(\n        this.options.initialSearchTerm,\n        { goToFirstResult: this.options.goToFirstResult, suppressFragmentChange: false }\n      );\n    }\n  };\n})(BookReader.prototype.init);\n\n/** @override */\nBookReader.prototype.buildToolbarElement = (function (super_) {\n  return function () {\n    const $el = super_.call(this);\n    if (!this.enableSearch) { return; }\n    if (this.searchView.dom.toolbarSearch) {\n      $el.find('.BRtoolbarSectionInfo').after(this.searchView.dom.toolbarSearch);\n    }\n    return $el;\n  };\n})(BookReader.prototype.buildToolbarElement);\n\n/** @override */\nBookReader.prototype._createPageContainer = (function (super_) {\n  return function (index) {\n    const pageContainer = super_.call(this, index);\n    if (this.enableSearch && pageContainer.page && index in this._searchBoxesByIndex) {\n      const pageIndex = pageContainer.page.index;\n      const boxes = this._searchBoxesByIndex[pageIndex];\n      renderBoxesInPageContainerLayer(\n        'searchHiliteLayer',\n        boxes,\n        pageContainer.page,\n        pageContainer.$container[0],\n        boxes.map(b => `match-index-${b.matchIndex}`),\n      );\n    }\n    return pageContainer;\n  };\n})(BookReader.prototype._createPageContainer);\n\n/**\n * @typedef {object} SearchOptions\n * @property {boolean} goToFirstResult\n * @property {boolean} disablePopup\n * @property {(null|function)} error - @deprecated at v.5.0\n * @property {(null|function)} success - @deprecated at v.5.0\n */\n\n/**\n * Submits search request\n *\n * @param {string} term\n * @param {SearchOptions} overrides\n */\nBookReader.prototype.search = async function(term = '', overrides = {}) {\n  /** @type {SearchOptions} */\n  const defaultOptions = {\n    goToFirstResult: false, /* jump to the first result (default=false) */\n    disablePopup: false,    /* don't show the modal progress (default=false) */\n    suppressFragmentChange: false, /* don't change the URL on initial load */\n    error: null,            /* optional error handler (default=null) */\n    success: null,          /* optional success handler (default=null) */\n\n  };\n  const options = jQuery.extend({}, defaultOptions, overrides);\n  this.suppressFragmentChange = options.suppressFragmentChange;\n  this.searchCancelled = false;\n\n  // strip slashes, since this goes in the url\n  this.searchTerm = term.replace(/\\//g, ' ');\n\n  if (!options.suppressFragmentChange) {\n    this.trigger(BookReader.eventNames.fragmentChange);\n  }\n\n  // Add quotes to the term. This is to compenstate for the backends default OR query\n  // term = term.replace(/['\"]+/g, '');\n  // term = '\"' + term + '\"';\n\n  // Remove the port and userdir\n  const serverPath = this.server.replace(/:.+/, '');\n  const baseUrl = `https://${serverPath}${this.searchInsideUrl}?`;\n\n  // Remove subPrefix from end of path\n  let path = this.bookPath;\n  const subPrefixWithSlash = `/${this.subPrefix}`;\n  if (this.bookPath.length - this.bookPath.lastIndexOf(subPrefixWithSlash) == subPrefixWithSlash.length) {\n    path = this.bookPath.substr(0, this.bookPath.length - subPrefixWithSlash.length);\n  }\n\n  const urlParams = {\n    item_id: this.bookId,\n    doc: this.subPrefix,\n    path,\n    q: term,\n  };\n\n  // NOTE that the API does not expect / (slashes) to be encoded. (%2F) won't work\n  const paramStr = $.param(urlParams).replace(/%2F/g, '/');\n\n  const url = `${baseUrl}${paramStr}`;\n\n  const callSearchResultsCallback = (searchInsideResults) => {\n    if (this.searchCancelled) {\n      return;\n    }\n    const responseHasError = searchInsideResults.error || !searchInsideResults.matches.length;\n    const hasCustomError = typeof options.error === 'function';\n    const hasCustomSuccess = typeof options.success === 'function';\n\n    if (responseHasError) {\n      hasCustomError\n        ? options.error.call(this, searchInsideResults, options)\n        : this.BRSearchCallbackError(searchInsideResults, options);\n    } else {\n      hasCustomSuccess\n        ? options.success.call(this, searchInsideResults, options)\n        : this.BRSearchCallback(searchInsideResults, options);\n    }\n  };\n\n  this.trigger('SearchStarted', { term: this.searchTerm, instance: this });\n  callSearchResultsCallback(await $.ajax({\n    url: url,\n    dataType: 'jsonp',\n    cache: true,\n    beforeSend: xhr => { this.searchXHR = xhr; },\n  }));\n};\n\n/**\n * cancels AJAX Call\n * emits custom event\n */\nBookReader.prototype._cancelSearch = function () {\n  this.searchXHR?.abort();\n  this.searchView.clearSearchFieldAndResults(false);\n  this.searchTerm = '';\n  this.searchXHR = null;\n  this.searchCancelled = true;\n  this.searchResults = [];\n};\n\n/**\n * External function to cancel search\n * checks for term & xhr in flight before running\n */\nBookReader.prototype.cancelSearchRequest = function () {\n  this.searchCancelled = true;\n  if (this.searchXHR !== null) {\n    this._cancelSearch();\n    this.searchView.toggleSearchPending();\n    this.trigger('SearchCanceled', { term: this.searchTerm, instance: this });\n  }\n};\n\n/**\n  * @typedef {object} SearchInsideMatchBox\n  * @property {number} page\n  * @property {number} r\n  * @property {number} l\n  * @property {number} b\n  * @property {number} t\n  * @property {HTMLDivElement} [div]\n  * @property {number} matchIndex This is a fake field! not part of the API response. The index of the match that contains this box in total search results matches.\n  */\n\n/**\n * @typedef {object} SearchInsideMatch\n * @property {number} matchIndex This is a fake field! Not part of the API response. It is added by the JS.\n * @property {string} displayPageNumber (fake field) The page number as it should be displayed in the UI.\n * @property {string} text\n * @property {Array<{ page: number, boxes: SearchInsideMatchBox[] }>} par\n */\n\n/**\n * @typedef {object} SearchInsideResults\n * @property {string} error\n * @property {SearchInsideMatch[]} matches\n * @property {boolean} indexed\n */\n\n/**\n * Attach some fields to search inside results\n * @param {SearchInsideResults} results\n * @param {(pageNum: LeafNum) => PageNumString} displayPageNumberFn\n */\nexport function marshallSearchResults(results, displayPageNumberFn) {\n  // Attach matchIndex to a few things to make it easier to identify\n  // an active/selected match\n  for (const [index, match] of results.matches.entries()) {\n    match.matchIndex = index;\n    match.displayPageNumber = displayPageNumberFn(match.par[0].page);\n    for (const par of match.par) {\n      for (const box of par.boxes) {\n        box.matchIndex = index;\n      }\n    }\n  }\n}\n\n/**\n * Search Results return handler\n * @param {SearchInsideResults} results\n * @param {object} options\n * @param {boolean} options.goToFirstResult\n */\nBookReader.prototype.BRSearchCallback = function(results, options) {\n  marshallSearchResults(results, pageNum => this.book.getPageNum(this.book.leafNumToIndex(pageNum)));\n  this.searchResults = results || [];\n\n  this.updateSearchHilites();\n  this.removeProgressPopup();\n  if (options.goToFirstResult) {\n    this._searchPluginGoToResult(0);\n  }\n  this.trigger('SearchCallback', { results, options, instance: this });\n};\n\n/**\n * Main search results error handler\n * @callback\n * @param {SearchInsideResults} results\n */\nBookReader.prototype.BRSearchCallbackError = function(results) {\n  this._BRSearchCallbackError(results);\n};\n\n/**\n * @private draws search results error\n * @callback\n * @param {SearchInsideResults} results\n * @param {jQuery} $el\n * @param {boolean} fade\n */\nBookReader.prototype._BRSearchCallbackError = function(results) {\n  this.searchResults = results;\n  const basePayload = {\n    term: this.searchTerm,\n    instance: this,\n  };\n  if (results.error) {\n    const payload = Object.assign({}, basePayload, { results });\n    this.trigger('SearchCallbackError', payload);\n  } else if (0 == results.matches.length) {\n    if (false === results.indexed) {\n      this.trigger('SearchCallbackBookNotIndexed', basePayload);\n      return;\n    }\n    this.trigger('SearchCallbackEmpty', basePayload);\n  }\n};\n\n/**\n * updates search on-page highlights controller\n */\nBookReader.prototype.updateSearchHilites = function() {\n  /** @type {SearchInsideMatch[]} */\n  const matches = this.searchResults?.matches || [];\n  /** @type { {[pageIndex: number]: SearchInsideMatchBox[]} } */\n  const boxesByIndex = {};\n\n  // Clear any existing svg layers\n  this.removeSearchHilites();\n\n  // Group by pageIndex\n  for (const match of matches) {\n    for (const box of match.par[0].boxes) {\n      const pageIndex = this.book.leafNumToIndex(box.page);\n      const pageBoxes = boxesByIndex[pageIndex] || (boxesByIndex[pageIndex] = []);\n      pageBoxes.push(box);\n    }\n  }\n\n  // update any already created pages\n  for (const [pageIndexString, boxes] of Object.entries(boxesByIndex)) {\n    const pageIndex = parseFloat(pageIndexString);\n    const page = this.book.getPage(pageIndex);\n    const pageContainers = this.getActivePageContainerElementsForIndex(pageIndex);\n    for (const container of pageContainers) {\n      renderBoxesInPageContainerLayer('searchHiliteLayer', boxes, page, container, boxes.map(b => `match-index-${b.matchIndex}`));\n    }\n  }\n\n  this._searchBoxesByIndex = boxesByIndex;\n};\n\n/**\n * remove search highlights\n */\nBookReader.prototype.removeSearchHilites = function() {\n  $(this.getActivePageContainerElements()).find('.searchHiliteLayer').remove();\n};\n\n/**\n * @private\n * Goes to the page specified. If the page is not viewable, tries to load the page\n * FIXME Most of this logic is IA specific, and should be less integrated into here\n * or at least more configurable.\n * @param {number} matchIndex\n */\nBookReader.prototype._searchPluginGoToResult = async function (matchIndex) {\n  const match = this.searchResults?.matches[matchIndex];\n  const book = this.book;\n  const pageIndex = book.leafNumToIndex(match.par[0].page);\n  const page = book.getPage(pageIndex);\n  const onNearbyPage = Math.abs(this.currentIndex() - pageIndex) < 3;\n  let makeUnviewableAtEnd = false;\n  if (!page.isViewable) {\n    const resp = await fetch('/services/bookreader/request_page?' + new URLSearchParams({\n      id: this.options.bookId,\n      subprefix: this.options.subPrefix,\n      leafNum: page.leafNum,\n    })).then(r => r.json());\n\n    for (const leafNum of resp.value) {\n      book.getPage(book.leafNumToIndex(leafNum)).makeViewable();\n    }\n\n    // not able to show page; make the page viewable anyways so that it can\n    // actually open. On IA, it has a fallback to a special error page.\n    if (!resp.value.length) {\n      book.getPage(pageIndex).makeViewable();\n      makeUnviewableAtEnd = true;\n    }\n  }\n  /* this updates the URL */\n  if (!this._isIndexDisplayed(pageIndex)) {\n    this.suppressFragmentChange = false;\n    this.jumpToIndex(pageIndex);\n  }\n\n  // Reset it to unviewable if it wasn't resolved\n  if (makeUnviewableAtEnd) {\n    book.getPage(pageIndex).makeViewable(false);\n  }\n\n  // Scroll/flash in the ui\n  const $boxes = await poll(() => $(`rect.match-index-${match.matchIndex}`), { until: result => result.length > 0 });\n  if ($boxes.length) {\n    $boxes.css('animation', 'none');\n    $boxes[0].scrollIntoView({\n      // Only vertically center the highlight if we're in 1up or in full screen. In\n      // 2up, if we're not fullscreen, the whole body gets scrolled around to try to\n      // center the highlight 🙄 See:\n      // https://stackoverflow.com/questions/11039885/scrollintoview-causing-the-whole-page-to-move/11041376\n      // Note: nearest doesn't quite work great, because the ReadAloud toolbar is now\n      // full-width, and covers up the last line of the highlight.\n      block: this.constMode1up == this.mode || this.isFullscreenActive ? 'center' : 'nearest',\n      inline: 'center',\n      behavior: onNearbyPage ? 'smooth' : 'auto',\n    });\n    // wait for animation to start\n    await new Promise(resolve => setTimeout(resolve, 100));\n    $boxes.removeAttr(\"style\");\n  }\n};\n\n/**\n * Removes all search pins\n */\nBookReader.prototype.removeSearchResults = function(suppressFragmentChange = false) {\n  this.removeSearchHilites(); //be sure to set all box.divs to null\n  this.searchTerm = null;\n  this.searchResults = null;\n  if (!suppressFragmentChange) {\n    this.trigger(BookReader.eventNames.fragmentChange);\n  }\n};\n\n/**\n * Returns true if a search highlight is currently being displayed\n * @returns {boolean}\n */\nBookReader.prototype.searchHighlightVisible = function() {\n  const results = this.searchResults;\n  let visiblePages = [];\n  if (null == results) return false;\n\n  if (this.constMode2up == this.mode) {\n    visiblePages = [this.twoPage.currentIndexL, this.twoPage.currentIndexR];\n  } else if (this.constMode1up == this.mode) {\n    visiblePages = [this.currentIndex()];\n  } else {\n    return false;\n  }\n\n  results.matches.some(match => {\n    return match.par[0].boxes.some(box => {\n      const pageIndex = this.book.leafNumToIndex(box.page);\n      if (jQuery.inArray(pageIndex, visiblePages) >= 0) {\n        return true;\n      }\n    });\n  });\n\n  return false;\n};\n","import { escapeHTML } from \"../../BookReader/utils.js\";\n\nclass SearchView {\n  /**\n   * @param {object} params\n   * @param {object} params.br The BookReader instance\n   * @param {function} params.cancelSearch callback when a user wants to cancel search\n   *\n   * @event BookReader:SearchResultsCleared - when the search results nav gets cleared\n   * @event BookReader:ToggleSearchMenu - when search results menu should toggle\n   */\n  constructor({ br, searchCancelledCallback = () => {} }) {\n    this.br = br;\n\n    // Search results are returned as a text blob with the hits wrapped in\n    // triple mustaches. Hits occasionally include text beyond the search\n    // term, so everything within the staches is captured and wrapped.\n    this.matcher = new RegExp('{{{([^]+?)}}}', 'g'); // [^] matches any character, including line breaks\n    this.matches = [];\n    this.cacheDOMElements();\n    this.bindEvents();\n    this.cancelSearch = searchCancelledCallback;\n  }\n\n  cacheDOMElements() {\n    this.dom = {};\n    // Search input within the top toolbar. Will be removed once the mobile menu is replaced.\n    this.dom.toolbarSearch = this.buildToolbarSearch();\n  }\n\n  /**\n   * @param {string} query\n   */\n  setQuery(query) {\n    this.br.$('[name=\"query\"]').val(query);\n  }\n\n  emptyMatches() {\n    this.matches = [];\n  }\n\n  removeResultPins() {\n    this.br.$('.BRnavpos .BRsearch').remove();\n  }\n\n  clearSearchFieldAndResults(dispatchEventWhenComplete = true) {\n    this.br.removeSearchResults();\n    this.removeResultPins();\n    this.emptyMatches();\n    this.setQuery('');\n    this.teardownSearchNavigation();\n    if (dispatchEventWhenComplete) {\n      this.br.trigger('SearchResultsCleared');\n    }\n  }\n\n  toggleSidebar() {\n    this.br.trigger('ToggleSearchMenu');\n  }\n\n  renderSearchNavigation() {\n    const selector = 'BRsearch-navigation';\n    $('.BRnav').before(`\n      <div class=\"${selector}\">\n        <button class=\"toggle-sidebar\">\n          <h4>\n            <span class=\"icon icon-search\"></span> Results\n          </h4>\n        </button>\n        <div class=\"pagination\">\n          <button class=\"prev\" title=\"Previous result\"><span class=\"icon icon-chevron hflip\"></span></button>\n          <span data-id=\"resultsCount\">${this.resultsPosition()}</span>\n          <button class=\"next\" title=\"Next result\"><span class=\"icon icon-chevron\"></button>\n        </div>\n        <button class=\"clear\" title=\"Clear search results\">\n          <span class=\"icon icon-close\"></span>\n        </button>\n      </div>\n    `);\n    this.dom.searchNavigation = $(`.${selector}`);\n  }\n\n  resultsPosition() {\n    let positionMessage = `${this.matches.length} result${this.matches.length === 1 ? '' : 's'}`;\n    if (~this.currentMatchIndex) {\n      positionMessage = `${this.currentMatchIndex + 1} / ${this.matches.length}`;\n    }\n    return positionMessage;\n  }\n\n  bindSearchNavigationEvents() {\n    if (!this.dom.searchNavigation) { return; }\n    const namespace = 'searchNavigation';\n\n    this.dom.searchNavigation\n      .on(`click.${namespace}`, '.clear', this.clearSearchFieldAndResults.bind(this))\n      .on(`click.${namespace}`, '.prev', this.showPrevResult.bind(this))\n      .on(`click.${namespace}`, '.next', this.showNextResult.bind(this))\n      .on(`click.${namespace}`, '.toggle-sidebar', this.toggleSidebar.bind(this))\n      .on(`click.${namespace}`, false);\n  }\n\n  showPrevResult() {\n    if (this.currentMatchIndex === 0) { return; }\n    if (this.br.mode === this.br.constModeThumb) { this.br.switchMode(this.br.constMode1up); }\n    if (!~this.currentMatchIndex) {\n      this.currentMatchIndex = this.getClosestMatchIndex((start, end, comparator) => end[0] > comparator) + 1;\n    }\n    this.br.$('.BRnavline .BRsearch').eq(--this.currentMatchIndex).click();\n    this.updateResultsPosition();\n    this.updateSearchNavigationButtons();\n  }\n\n  showNextResult() {\n    if (this.currentMatchIndex + 1 === this.matches.length) { return; }\n    if (this.br.mode === this.br.constModeThumb) { this.br.switchMode(this.br.constMode1up); }\n    if (!~this.currentMatchIndex) {\n      this.currentMatchIndex = this.getClosestMatchIndex((start, end, comparator) => start[start.length - 1] > comparator) - 1;\n    }\n    this.br.$('.BRnavline .BRsearch').eq(++this.currentMatchIndex).click();\n    this.updateResultsPosition();\n    this.updateSearchNavigationButtons();\n  }\n\n  /**\n   * Obtains closest match based on the logical comparison function passed in.\n   * When the comparison function returns true, the starting (left) half of the\n   * matches array is used in the binary split, else the ending (right) half is\n   * used. A recursive call is made to perform the same split and comparison\n   * on the winning half of the matches. This is traditionally known as binary\n   * search (https://en.wikipedia.org/wiki/Binary_search_algorithm), and in\n   * most cases (medium to large search result arrays) should outperform\n   * traversing the array from start to finish. In the case of small arrays,\n   * the speed difference is negligible.\n   *\n   * @param {function} comparisonFn\n   * @return {number} matchIndex\n   */\n  getClosestMatchIndex(comparisonFn) {\n    const matchPages = this.matches.map((m) => m.par[0].page);\n    const currentPage = this.br.currentIndex() + 1;\n    const closestTo = (pool, comparator) => {\n      if (pool.length === 1) { return pool[0]; }\n      const start = pool.slice(0, pool.length / 2);\n      const end = pool.slice(pool.length / 2);\n      return closestTo((comparisonFn(start, end, comparator) ? start : end), comparator);\n    };\n\n    const closestPage = closestTo(matchPages, currentPage);\n    return this.matches.indexOf(this.matches.find((m) => m.par[0].page === closestPage));\n  }\n\n  updateResultsPosition() {\n    if (!this.dom.searchNavigation) return;\n    this.dom.searchNavigation.find('[data-id=resultsCount]').text(this.resultsPosition());\n  }\n\n  updateSearchNavigationButtons() {\n    if (!this.dom.searchNavigation) return;\n    this.dom.searchNavigation.find('.prev').attr('disabled', !this.currentMatchIndex);\n    this.dom.searchNavigation.find('.next').attr('disabled', this.currentMatchIndex + 1 === this.matches.length);\n  }\n\n  teardownSearchNavigation() {\n    if (!this.dom.searchNavigation) {\n      this.dom.searchNavigation = $('.BRsearch-navigation');\n    }\n    if (!this.dom.searchNavigation.length) { return; }\n\n    this.dom.searchNavigation.off('.searchNavigation').remove();\n    this.dom.searchNavigation = null;\n    this.br.resize();\n  }\n\n  setCurrentMatchIndex() {\n    let matchingSearchResult;\n    if (this.br.mode === this.br.constModeThumb) {\n      this.currentMatchIndex = -1;\n      return;\n    }\n    if (this.br.mode === this.br.constMode2up) {\n      matchingSearchResult = this.find2upMatchingSearchResult();\n    }\n    else {\n      matchingSearchResult = this.find1upMatchingSearchResult();\n    }\n    this.currentMatchIndex = this.matches.indexOf(matchingSearchResult);\n  }\n\n  find1upMatchingSearchResult() {\n    return this.matches.find((m) => this.br.currentIndex() === m.par[0].page - 1);\n  }\n\n  find2upMatchingSearchResult() {\n    return this.matches.find((m) => this.br._isIndexDisplayed(m.par[0].page - 1));\n  }\n\n  updateSearchNavigation() {\n    if (!this.matches.length) { return; }\n\n    this.setCurrentMatchIndex();\n    this.updateResultsPosition();\n    this.updateSearchNavigationButtons();\n  }\n\n  /**\n   * @param {boolean} bool\n   */\n  togglePinsFor(bool) {\n    const pinsVisibleState = bool ? 'visible' : 'hidden';\n    this.br.refs.$BRfooter.find('.BRsearch').css({ visibility: pinsVisibleState });\n  }\n\n  buildToolbarSearch() {\n    const toolbarSearch = document.createElement('span');\n    toolbarSearch.classList.add('BRtoolbarSection', 'BRtoolbarSectionSearch');\n    toolbarSearch.innerHTML = `\n      <form class=\"BRbooksearch desktop\">\n        <input type=\"search\" name=\"query\" class=\"BRsearchInput\" value=\"\" placeholder=\"Search inside\"/>\n        <button type=\"submit\" class=\"BRsearchSubmit\">\n          <img src=\"${this.br.imagesBaseURL}icon_search_button.svg\" />\n        </button>\n      </form>\n    `;\n    return toolbarSearch;\n  }\n\n  /**\n   * @param {array} matches\n   */\n  renderPins(matches) {\n    matches.forEach((match) => {\n      const queryString = match.text;\n      const pageIndex = this.br.book.leafNumToIndex(match.par[0].page);\n      const uiStringSearch = \"Search result\"; // i18n\n\n      const percentThrough = this.br.constructor.util.cssPercentage(pageIndex, this.br.book.getNumLeafs() - 1);\n\n      const escapedQueryString = escapeHTML(queryString);\n      const queryStringWithB = escapedQueryString.replace(this.matcher, '<b>$1</b>');\n\n      let queryStringWithBTruncated = '';\n\n      if (queryString.length > 100) {\n        queryStringWithBTruncated = queryString.replace(/^(.{100}[^\\s]*).*/, \"$1\");\n\n        // If truncating, we must escape *after* truncation occurs (but before wrapping in <b>)\n        queryStringWithBTruncated = escapeHTML(queryStringWithBTruncated)\n          .replace(this.matcher, '<b>$1</b>')\n          + '...';\n      }\n\n      // draw marker\n      $('<div>')\n        .addClass('BRsearch')\n        .css({\n          left: percentThrough,\n        })\n        .attr('title', uiStringSearch)\n        .append(`\n          <div class=\"BRquery\">\n            <div>${queryStringWithBTruncated || queryStringWithB}</div>\n            <div>Page ${match.displayPageNumber}</div>\n          </div>\n        `)\n        .appendTo(this.br.$('.BRnavline'))\n        .on(\"mouseenter\", (event) => {\n          // remove from other markers then turn on just for this\n          // XXX should be done when nav slider moves\n          const marker = event.currentTarget;\n          const tooltip = marker.querySelector('.BRquery');\n          const tooltipOffset = tooltip.getBoundingClientRect();\n          const targetOffset = marker.getBoundingClientRect();\n          const boxSizeAdjust = parseInt(getComputedStyle(tooltip).paddingLeft) * 2;\n          if (tooltipOffset.x - boxSizeAdjust < 0) {\n            tooltip.style.setProperty('transform', `translateX(-${targetOffset.left - boxSizeAdjust}px)`);\n          }\n          $('.BRsearch,.BRchapter').removeClass('front');\n          $(event.target).addClass('front');\n        })\n        .on(\"mouseleave\", (event) => $(event.target).removeClass('front'))\n        .on(\"click\", () => { this.br._searchPluginGoToResult(match.matchIndex); });\n    });\n  }\n\n  /**\n   * @param {boolean} bool\n   */\n  toggleSearchPending(bool) {\n    if (bool) {\n      this.br.showProgressPopup(\"Search results will appear below...\", () => this.progressPopupClosed());\n    }\n    else {\n      this.br.removeProgressPopup();\n    }\n  }\n\n  /**\n   * Primary callback when user cancels search popup\n   */\n  progressPopupClosed() {\n    this.toggleSearchPending();\n    this.cancelSearch();\n  }\n\n  renderErrorModal(textIsProcessing = false) {\n    const errorDetails = `${!textIsProcessing ? 'The text may still be processing. ' : ''}Please try again.`;\n    this.renderModalMessage(`\n      Sorry, there was an error with your search.\n      <br />\n      ${errorDetails}\n    `);\n    this.delayModalRemovalFor(4000);\n  }\n\n  renderBookNotIndexedModal() {\n    this.renderModalMessage(`\n      <p>\n         This book hasn't been indexed for searching yet.\n         We've just started indexing it, so search should be available soon.\n         <br />\n         Please try again later. Thanks!\n      </p>\n    `);\n    this.delayModalRemovalFor(5000);\n  }\n\n  renderResultsEmptyModal() {\n    this.renderModalMessage('No matches were found.');\n    this.delayModalRemovalFor(2000);\n  }\n\n  /**\n   * @param {string} messageHTML The innerHTML string used to popupate the modal contents\n   */\n  renderModalMessage(messageHTML) {\n    const modal = document.createElement('div');\n    modal.classList.add('BRprogresspopup', 'search_modal');\n    modal.innerHTML = messageHTML;\n    document.querySelector(this.br.el).append(modal);\n  }\n\n  /**\n   * @param {number} timeoutMS\n   */\n  delayModalRemovalFor(timeoutMS) {\n    setTimeout(this.br.removeProgressPopup.bind(this.br), timeoutMS);\n  }\n\n  /**\n   * @param {Event} e\n   */\n  submitHandler(e) {\n    e.preventDefault();\n    const query = e.target.querySelector('[name=\"query\"]').value;\n    if (!query.length) { return false; }\n    this.br.search(query);\n    this.emptyMatches();\n    this.toggleSearchPending(true);\n    return false;\n  }\n\n  /**\n   * @param {Event} e\n   * @param {object} properties\n   *   @param {object} properties.results\n   *   @param {object} properties.options\n   */\n  handleSearchCallback(e, { results, options }) {\n    this.matches = results.matches;\n    this.setCurrentMatchIndex();\n    this.teardownSearchNavigation();\n    this.renderSearchNavigation();\n    this.bindSearchNavigationEvents();\n    this.renderPins(results.matches);\n    this.toggleSearchPending(false);\n    if (options.goToFirstResult) {\n      $(document).one('BookReader:pageChanged', () => {\n        this.br.resize();\n      });\n    } else {\n      this.br.resize();\n    }\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleNavToggledCallback(e) {\n    const is_visible = this.br.navigationIsVisible();\n    this.togglePinsFor(is_visible);\n  }\n\n  handleSearchStarted() {\n    this.emptyMatches();\n    this.br.removeSearchHilites();\n    this.removeResultPins();\n    this.toggleSearchPending(true);\n    this.teardownSearchNavigation();\n    this.setQuery(this.br.searchTerm);\n  }\n\n  /**\n   * Event listener for: `BookReader:SearchCallbackError`\n   * @param {CustomEvent} event\n   */\n  handleSearchCallbackError(event = {}) {\n    this.toggleSearchPending(false);\n    const isIndexed = event?.detail?.props?.results?.indexed;\n    this.renderErrorModal(isIndexed);\n  }\n\n  handleSearchCallbackBookNotIndexed() {\n    this.toggleSearchPending(false);\n    this.renderBookNotIndexedModal();\n  }\n\n  handleSearchCallbackEmpty() {\n    this.toggleSearchPending(false);\n    this.renderResultsEmptyModal();\n  }\n\n  bindEvents() {\n    const namespace = 'BookReader:';\n\n    window.addEventListener(`${namespace}SearchCallbackError`, this.handleSearchCallbackError.bind(this));\n    $(document).on(`${namespace}SearchCallback`, this.handleSearchCallback.bind(this))\n      .on(`${namespace}navToggled`, this.handleNavToggledCallback.bind(this))\n      .on(`${namespace}SearchStarted`, this.handleSearchStarted.bind(this))\n      .on(`${namespace}SearchCallbackBookNotIndexed`, this.handleSearchCallbackBookNotIndexed.bind(this))\n      .on(`${namespace}SearchCallbackEmpty`, this.handleSearchCallbackEmpty.bind(this))\n      .on(`${namespace}pageChanged`, this.updateSearchNavigation.bind(this));\n\n    this.dom.toolbarSearch.querySelector('form').addEventListener('submit', this.submitHandler.bind(this));\n  }\n}\n\nexport default SearchView;\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar charAt = uncurryThis(''.charAt);\nvar n$ParseFloat = global.parseFloat;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR && !fails(function () { n$ParseFloat(Object(ITERATOR)); }));\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = n$ParseFloat(trimmedString);\n  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;\n} : n$ParseFloat;\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var $ = require('../internals/export');\nvar $parseFloat = require('../internals/number-parse-float');\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\n$({ global: true, forced: parseFloat != $parseFloat }, {\n  parseFloat: $parseFloat\n});\n"],"names":["super_","SearchView","br","searchCancelledCallback","this","matcher","RegExp","matches","cacheDOMElements","bindEvents","cancelSearch","dom","toolbarSearch","buildToolbarSearch","query","$","val","remove","dispatchEventWhenComplete","removeSearchResults","removeResultPins","emptyMatches","setQuery","teardownSearchNavigation","trigger","selector","before","resultsPosition","searchNavigation","positionMessage","length","currentMatchIndex","namespace","on","clearSearchFieldAndResults","bind","showPrevResult","showNextResult","toggleSidebar","mode","constModeThumb","switchMode","constMode1up","getClosestMatchIndex","start","end","comparator","eq","click","updateResultsPosition","updateSearchNavigationButtons","comparisonFn","closestPage","closestTo","pool","slice","map","m","par","page","currentIndex","indexOf","find","text","attr","off","resize","matchingSearchResult","constMode2up","find2upMatchingSearchResult","find1upMatchingSearchResult","_isIndexDisplayed","setCurrentMatchIndex","bool","pinsVisibleState","refs","$BRfooter","css","visibility","document","createElement","classList","add","innerHTML","imagesBaseURL","forEach","match","queryString","pageIndex","book","leafNumToIndex","percentThrough","constructor","util","cssPercentage","getNumLeafs","queryStringWithB","escapeHTML","replace","queryStringWithBTruncated","addClass","left","append","displayPageNumber","appendTo","event","marker","currentTarget","tooltip","querySelector","tooltipOffset","getBoundingClientRect","targetOffset","boxSizeAdjust","parseInt","getComputedStyle","paddingLeft","x","style","setProperty","removeClass","target","_searchPluginGoToResult","matchIndex","showProgressPopup","progressPopupClosed","removeProgressPopup","toggleSearchPending","textIsProcessing","errorDetails","renderModalMessage","delayModalRemovalFor","messageHTML","modal","el","timeoutMS","setTimeout","e","preventDefault","value","search","results","options","renderSearchNavigation","bindSearchNavigationEvents","renderPins","goToFirstResult","one","is_visible","navigationIsVisible","togglePinsFor","removeSearchHilites","searchTerm","isIndexed","detail","props","indexed","renderErrorModal","renderBookNotIndexedModal","renderResultsEmptyModal","window","addEventListener","handleSearchCallbackError","handleSearchCallback","handleNavToggledCallback","handleSearchStarted","handleSearchCallbackBookNotIndexed","handleSearchCallbackEmpty","updateSearchNavigation","submitHandler","jQuery","extend","BookReader","defaultOptions","server","bookId","subPrefix","bookPath","enableSearch","searchInsideUrl","initialSearchTerm","prototype","setup","call","searchResults","searchXHR","_cancelSearch","cancelSearchRequest","_searchBoxesByIndex","searchView","undefined","init","term","instance","suppressFragmentChange","buildToolbarElement","$el","after","_createPageContainer","index","pageContainer","boxes","renderBoxesInPageContainerLayer","$container","b","overrides","disablePopup","error","success","searchCancelled","eventNames","fragmentChange","serverPath","baseUrl","path","subPrefixWithSlash","lastIndexOf","substr","urlParams","item_id","doc","q","paramStr","param","url","callSearchResultsCallback","searchInsideResults","responseHasError","hasCustomError","hasCustomSuccess","BRSearchCallbackError","BRSearchCallback","ajax","dataType","cache","beforeSend","xhr","abort","displayPageNumberFn","pageNum","entries","getPageNum","marshallSearchResults","updateSearchHilites","_BRSearchCallbackError","basePayload","payload","Object","assign","boxesByIndex","box","push","pageIndexString","parseFloat","getPage","getActivePageContainerElementsForIndex","container","getActivePageContainerElements","onNearbyPage","Math","abs","makeUnviewableAtEnd","isViewable","fetch","URLSearchParams","id","subprefix","leafNum","then","r","json","resp","makeViewable","jumpToIndex","poll","until","result","$boxes","scrollIntoView","block","isFullscreenActive","inline","behavior","Promise","resolve","removeAttr","searchHighlightVisible","visiblePages","twoPage","currentIndexL","currentIndexR","some","inArray","global","fails","uncurryThis","toString","trim","whitespaces","charAt","n$ParseFloat","Symbol","ITERATOR","iterator","FORCED","module","exports","string","trimmedString","$entries","stat","O","$parseFloat","forced"],"sourceRoot":""}